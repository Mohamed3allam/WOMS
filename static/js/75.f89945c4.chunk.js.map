{"version":3,"file":"static/js/75.f89945c4.chunk.js","mappings":"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","sources":["components/header/Header.jsx","components/memberships/findMembershipSearch/FindMembershipSearch.jsx","pages/memberships/packages/packages-data.js","components/memberships/packages/AllPackages.js","pages/memberships/packages/Packages.js","pages/memberships/packages/package/PackageHeader.jsx","pages/memberships/packages/package/Package.js","pages/memberships/Memberships.js"],"sourcesContent":["import React from 'react'\r\n\r\nexport default function Header({ headerFor ,images }) {\r\n    return (\r\n        <section className=\"page-header-section service-title style-1\"\r\n            style={{backgroundImage: `url('${images['pageheader.jpg']}')`}}>\r\n            <div className=\"page-header-content\">\r\n                <div className=\"container\">\r\n                    <div className=\"page-header-content-inner\">\r\n                        <div className=\"page-title\">\r\n                            <h2>{headerFor}</h2>\r\n                        </div>\r\n                        <ol className=\"breadcrumb\">\r\n                            <li><a href=\"index.html\">Home</a></li>\r\n                            <li className=\"active\">{headerFor}</li>\r\n                        </ol>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n","import { DataGrid } from '@mui/x-data-grid'\r\nimport { MDBBtn, MDBIcon, MDBInput, MDBInputGroup } from 'mdb-react-ui-kit'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { styled } from 'styled-components'\r\n\r\n\r\nconst SearchedImage = styled.div`\r\n    \r\n`\r\nconst UserListUser = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  word-wrap: break-word !important;\r\n\r\n`\r\nconst UserListImg = styled.img`\r\n  width: 32px;\r\n  height: 32px;\r\n  border-radius: 50%;\r\n  object-fit: cover;\r\n  margin-right: 10px;\r\n`\r\nconst UserListEdit = styled.button`\r\n  border: none;\r\n  border-radius: 10px;\r\n  padding: 5px 10px;\r\n  background-color: #3bb077;\r\n  color: white;\r\n  cursor: pointer;\r\n  margin-right: 20px;\r\n`\r\nconst FindMemberShipSearch = ({ images }) => {\r\n  const [major, setMajor] = useState('')\r\n  const searchParams = new URLSearchParams(window.location.search);\r\n  const majorName = searchParams.get('major')\r\n\r\n  useEffect(() => {\r\n    if (!searchParams.get('major')) {\r\n      window.location.href = '/choose-major'\r\n    }\r\n\r\n  },[])\r\n\r\n\r\n    const [doctors, setDoctors] = useState('')\r\n    \r\n    \r\n    const [doctorID, setDoctorID] = useState('')\r\n    const [doctorName, setDoctorName] = useState('')\r\n    const [doctorCountry, setdoctorCountry] = useState('')\r\n\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState('')\r\n\r\n    useEffect(()=>{\r\n        const fetchDoctors = async () => {\r\n            try{\r\n                setLoading(true)\r\n                const response = await fetch(`http://localhost:4002/doctors?major=${majorName}`, {\r\n                    method:'GET'\r\n                })\r\n                const json = await response.json()\r\n                if (response.ok) {\r\n                    setDoctors(json)\r\n                    setLoading(false)\r\n                }\r\n            } catch (error) {\r\n                console.log(error.message)\r\n                setError(error.message)\r\n            }\r\n        }\r\n        fetchDoctors()\r\n    },[])\r\n\r\n    const searchDoctor = async (e) => {\r\n        try {\r\n            setError('')\r\n            setDoctors('')\r\n            setLoading(true)\r\n            e.preventDefault()\r\n            const response = await fetch(`http://localhost:4002/doctors?major=${majorName}` + `${doctorID && `doctor_id=${doctorID}&`}${doctorName && `name=${doctorName}&`}${doctorCountry && `country=${doctorCountry}`}`, {\r\n                method:\"GET\"\r\n            })\r\n            const json = await response.json()\r\n            if (json.length === 0) {\r\n                setError('No Doctors With this data')\r\n            }\r\n            if (!response.ok) {\r\n                setLoading(false)\r\n                throw Error('Server Error')\r\n            }\r\n            if (response.ok) {\r\n                setError('')\r\n                setLoading(false)\r\n                setDoctors(json)\r\n            } else {\r\n                setLoading(false)\r\n            }\r\n        } catch (error) {\r\n            setLoading(false)\r\n            setError(error)\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const columns = [\r\n        { field: 'id', headerName: 'ID', width: 130, renderCell: (params) => {\r\n          return (\r\n            <UserListUser style={{fontWeight:'bold',fontSize:12.5}}>\r\n              {params.row.doctor_id}\r\n            </UserListUser>\r\n          )\r\n        } },\r\n        { field: 'Name', headerName: 'Name', width: 250, renderCell: (params)=>{\r\n          return (\r\n            <UserListUser style={{fontWeight:'bold'}}>\r\n              <UserListImg src={params.row.image} alt=\"\" />\r\n              {\r\n                // user.user._id === params.row._id ?\r\n                // 'You' :\r\n                `Dr.${params.row.name}`\r\n              }\r\n            </UserListUser>\r\n          )\r\n        } },\r\n        { field: 'email', headerName: 'Email', width: 220, renderCell: (params) => {\r\n          return (\r\n            <UserListUser>\r\n              {params.row.email}\r\n            </UserListUser>\r\n          )\r\n        } },\r\n        { field: 'country', headerName: 'Country', width: 220, renderCell: (params) => {\r\n            return (\r\n              <UserListUser>\r\n                {params.row.country}\r\n              </UserListUser>\r\n            )\r\n          } },\r\n          { field: 'major', headerName: 'Major', width: 220, renderCell: (params) => {\r\n            return (\r\n              <UserListUser>\r\n                {params.row.major}\r\n              </UserListUser>\r\n            )\r\n          } },\r\n        {field: 'phone', headerName: 'Phone', width: 200, renderCell: (params) => {\r\n          return (\r\n            <UserListUser>\r\n              {params.row.phone}\r\n            </UserListUser>\r\n          )\r\n        }\r\n        },\r\n        { field: 'action', headerName: 'Action', width: 150, renderCell: (params) => {\r\n            return (\r\n              <>\r\n                <div>\r\n                    <Link to={'/doctor/'+ params.row.doctor_id}>\r\n                        <UserListEdit>\r\n                            View Profile\r\n                        </UserListEdit>\r\n                    </Link>\r\n                </div>\r\n              </>\r\n            )\r\n          }\r\n        }\r\n    ];\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <form>\r\n                    <MDBInputGroup onSubmit={searchDoctor} className='p-5 row'>\r\n                        <MDBInput value={doctorID} onInput={e => setDoctorID(e.target.value)} className='m-0 col-lg-3' label='Doctor ID' />\r\n                        <MDBInput value={doctorName} onInput={e => setDoctorName(e.target.value)} className='m-0 col-lg-3' label='Doctor Name' />\r\n                        <MDBInput value={doctorCountry} onInput={e => setdoctorCountry(e.target.value)} className='m-0 col-lg-3' label='Doctor country' />\r\n                        <MDBBtn disabled={loading} onClick={searchDoctor} className='btn-success col-lg-2' type='submit'>\r\n                            <MDBIcon icon='search' />\r\n                        </MDBBtn>\r\n                    </MDBInputGroup>\r\n                </form>\r\n            </div>\r\n            {\r\n                doctors && (\r\n                        <DataGrid\r\n                          autoHeight\r\n                          rows={doctors}\r\n                          columns={columns}\r\n                          pageSize={20}\r\n                          rowsPerPageOptions={[20]}\r\n                          checkboxSelection\r\n                          disableSelectionOnClick\r\n                          getRowId={(row)=>row.doctor_id}\r\n                        />\r\n                      )\r\n            }\r\n            <div>\r\n                {\r\n                    loading && (\r\n                        <>\r\n                            <div className='card p-5' style={{minHeight:'unset'}}>\r\n                                <p className=\" text-start placeholder col-6\"></p>\r\n                                <p className=\" text-start placeholder w-75\"></p>\r\n                                <p className=\" text-start placeholder\" style={{width: '25%'}}></p>\r\n                            </div>\r\n                        </>\r\n                    )\r\n                }\r\n                {\r\n                    error && (\r\n                        <h2 className='h2'>{error}</h2>\r\n                    )\r\n                }\r\n                \r\n            </div>\r\n        </>\r\n        )\r\n}\r\n\r\nexport default FindMemberShipSearch","const silver = {\r\n    title:'Silver Package',\r\n    package_cost:99,\r\n    image:'packages-bg.jpg',\r\n    link:'/packages/silver-package',\r\n    title_color:'#dbdbdb',\r\n    features:[\r\n        'Membership in a British European organization',\r\n        'Having the doctors information on the website',\r\n        'Providing books online',\r\n        'Publishing articles and research',\r\n        'Obtaining a membership card',\r\n        'Obtaining a membership certificate',\r\n        'Membership verification code',\r\n        'Get a personal account on the organization’s website',\r\n    ]\r\n}\r\nconst gold ={\r\n    title:'Golden Package',\r\n    package_cost:299,\r\n    image:'packages-bg.jpg',\r\n    link:'/packages/gold-package',\r\n    title_color:'#ffdc73',\r\n    features:[\r\n        ...silver.features,\r\n        'Attending international conferences',\r\n        'Possibility of attending international courses',\r\n        'Attending courses on the website',\r\n        'Attending international practical training',\r\n        'Professional training and development',\r\n        'Professional network',\r\n        'Providing consultations'\r\n    ]\r\n}\r\nconst diamond = {\r\n    title:'Diamond Package',\r\n    package_cost:499,\r\n    image:'packages-bg.jpg',\r\n    link:'/packages/diamond-package',\r\n    title_color:'#a9d4ff',\r\n    features:[\r\n        ...gold.features,\r\n        'Participation in decision-making',\r\n        'Professional support from international doctors and consultants',\r\n        'Participation in health awareness services',\r\n        'Volunteering in international medical activities',\r\n        'Access to the organization’s public library',\r\n        'Electronic marketing services',\r\n    ]\r\n}\r\nconst  vip = {\r\n    title:'VIP Package',\r\n    package_cost:999,\r\n    image:'packages-bg.jpg',\r\n    link:'/packages/vip-package',\r\n    title_color:'#76e125',\r\n    features:[\r\n        ...diamond.features,\r\n        'Get discounts on purchasing medical equipment',\r\n        'Providing discounts on purchasing medical books',\r\n        'Medical insurance for the membership holder and his family',\r\n        'International tourist trips',\r\n        'Providing opportunities to obtain international jobs',\r\n        'Recruitment assistant',\r\n        'Website design services for doctors'\r\n    ]\r\n}\r\n\r\nexport const packages = {\r\n    silver,\r\n    gold,\r\n    diamond,\r\n    vip\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { packages } from '../../../pages/memberships/packages/packages-data'\r\n\r\nexport default function AllPackages({ images }) {\r\n\r\n  // Object.values(packages).map((package_p) => {\r\n  //   console.log(package_p)\r\n  // })\r\n    return (\r\n      <div className=''>\r\n        <div className=\"pricingTable\">\r\n          <h2 className=\"pricingTable-title\">Find a package that's right for you.</h2>        \r\n          <ul className=\"pricingTable-firstTable d-flex flex-row align-items-start justify-content-start row\">\r\n            {\r\n              Object.values(packages).map((single_package) => (\r\n                single_package.title === 'VIP Package' ? \r\n                (\r\n                  <li className=\"pricingTable-firstTable_table col\" style={{color:'white',width:'100%', backgroundImage:'linear-gradient(to top, #67bb00,#81bd38,#98bd6c, white 100%)'}}>\r\n                    <h1 className=\"pricingTable-firstTable_table__header\">{single_package.title}</h1>\r\n                    <p className=\"pricingTable-firstTable_table__pricing\" style={{color:'gray'}}><span>$</span><span>{single_package.package_cost}</span><span></span></p>\r\n                    <ul className=\"pricingTable-firstTable_table__options\">\r\n                      {\r\n                        single_package.features.map((feature) => (\r\n                          <li><Link className='package-advantage' to={`/package-advantages#${feature.replace(/\\s+/g, '')}`}>{feature}</Link></li>\r\n                        ))\r\n                      }\r\n                    </ul>\r\n                    <button className=\"pricingTable-firstTable_table__getstart\">Get Started Now</button>\r\n                  </li>\r\n                ) : (\r\n                  <li className=\"pricingTable-firstTable_table col\">\r\n                    <h1 className=\"pricingTable-firstTable_table__header\">{single_package.title}</h1>\r\n                    <p className=\"pricingTable-firstTable_table__pricing\"><span>$</span><span>{single_package.package_cost}</span><span></span></p>\r\n                    <ul className=\"pricingTable-firstTable_table__options text-start\">\r\n                      {\r\n                        single_package.features.map((feature) => (\r\n                          <li><Link className='package-advantage' to={`/package-feature#${feature.replace(/\\s+/g, '')}`}>{feature}</Link></li>\r\n                        ))\r\n                      }\r\n                    </ul>\r\n                    <button className=\"pricingTable-firstTable_table__getstart\">Get Started Now</button>\r\n                  </li>\r\n                )\r\n              ))\r\n            }\r\n          </ul>\r\n\r\n          {/* <ul className=\"pricingTable-firstTable\">\r\n            \r\n          </ul> */}\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n// import DoctorSection from '../../components/home/DoctorSection'\r\nimport { Helmet } from 'react-helmet-async'\r\nimport Header from '../../../components/header/Header'\r\nimport AllPackages from '../../../components/memberships/packages/AllPackages'\r\n\r\nconst Packages = ({ images }) => {\r\n  return (\r\n    <>\r\n    <Helmet>\r\n      <title>Packages</title>\r\n    </Helmet>\r\n      <div>\r\n          <Header headerFor={'Packages'} images={images} />\r\n          <AllPackages images={images} />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Packages","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function PackageHeader({ title_color, headerFor, images, image }) {\r\n    return (\r\n        <div>\r\n            <section className=\"page-header-section service-title style-1\" style={{backgroundImage: `url('${images[image]}')`}} >\r\n                <div>\r\n                    <div className=\"page-header-content\">\r\n                        <div className=\"container\">\r\n                            <div className=\"page-header-content-inner\">\r\n                                <div className=\"page-title\">\r\n                                    <h2 style={{color: title_color, letterSpacing:'2px',fontWeight:\"900\",fontSize:'50px'}} className={`wow fadeInDown ${headerFor === \"VIP Package\" && 'packages-header'}`}>{headerFor}</h2>\r\n                                </div>\r\n                                <ol className=\"breadcrumb\">\r\n                                    <li><Link className=' text-white wow fadeInDown' to=\"/\">Home</Link></li>\r\n                                    <li className=\"active text-white wow fadeInDown\">{headerFor}</li>\r\n                                </ol>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PackageHeader from './PackageHeader'\r\n\r\nconst Package = ({ single_package, images }) => {\r\n\r\n  return (\r\n    <>\r\n        <PackageHeader title_color={single_package.title_color} headerFor={single_package.title} images={images} image={single_package.image} />\r\n        <div className='container py-5'>\r\n            <h2 className='h2 wow fadeInUp'>\r\n                Features And Benefits\r\n            </h2>\r\n            <p className='lead'>Only For</p>\r\n            <h2 className={`h2 ${single_package.title === 'VIP Package' && 'packages-header'} wow fadeInUp text-dark`}>\r\n                <b>${single_package.package_cost}</b>\r\n            </h2>\r\n            <div className='py-3'>\r\n                <ul className='pricingTable-firstTable_table__options packages-features' style={{columns:3,gap:'100px'}}>\r\n                    {\r\n                        single_package.features.map((feature) => (\r\n                            <li className='single-feature fadeInUp' id={feature.replace(/\\s+/g, '')} key={feature}>\r\n                                {feature}\r\n                            </li>\r\n                        ))\r\n                    }\r\n                </ul>\r\n            </div>\r\n        </div>\r\n        \r\n    </>\r\n  )\r\n}\r\n\r\nexport default Package","import React from 'react'\r\nimport { Route, Routes } from 'react-router-dom'\r\nimport FindYourMembership from './find-your-membership/FindYourMembership'\r\nimport Packages from './packages/Packages'\r\nimport { packages } from './packages/packages-data'\r\nimport Package from './packages/package/Package'\r\n\r\nconst Memberships = ({ images }) => {\r\n    return (\r\n        <>\r\n            <Routes>\r\n                <Route exact path='packages' element={<Packages images={images} />} />\r\n                {\r\n                    Object.values(packages).map((single_package) => (\r\n                        <Route exact path={single_package.link} element={<Package single_package={single_package} images={images} />} />\r\n                    ))\r\n                }\r\n                {/* <Route exact path='find-your-membership' element={<FindYourMembership images={images} />} /> */}\r\n            </Routes>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Memberships"],"names":["Header","_ref","headerFor","images","_jsx","className","style","backgroundImage","concat","children","_jsxs","href","styled","div","_templateObject","_taggedTemplateLiteral","_templateObject2","img","_templateObject3","button","_templateObject4","silver","title","package_cost","image","link","title_color","features","gold","diamond","packages","vip","AllPackages","Object","values","map","single_package","color","width","feature","Link","to","replace","_Fragment","Helmet","PackageHeader","letterSpacing","fontWeight","fontSize","columns","gap","id","Routes","Route","exact","path","element","Packages","Package"],"sourceRoot":""}